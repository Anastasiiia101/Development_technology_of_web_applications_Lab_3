{
	"info": {
		"_postman_id": "dc4d061f-2882-4929-8cd0-9ee3d33b641e",
		"name": "xLink",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "url-details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"The response has all properties\", () => {",
							"    //parse the response json and test three properties",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.id).to.be.a('number');",
							"    pm.expect(responseJson.original_url).to.be.a('string');",
							"    pm.expect(responseJson.name).to.be.a('string');",
							"    pm.expect(responseJson.short_url).to.be.a('string');",
							"    pm.expect(responseJson.owner).to.be.a('string');",
							"});",
							"",
							"pm.test(\"Response time is less than 300ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "root",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://0.0.0.0:8000/api/v1/shortener/1",
					"protocol": "http",
					"host": [
						"0",
						"0",
						"0",
						"0"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"shortener",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "url-create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"  pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"The response has all properties\", () => {",
							"    //parse the response json and test three properties",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.id).to.be.a('number');",
							"    pm.expect(responseJson.name).to.be.a('string');",
							"    pm.expect(responseJson.description).to.be.a('string');",
							"    pm.expect(responseJson.time_entries).to.be.a('array');",
							"    pm.expect(responseJson.status).to.be.a('number');",
							"    pm.expect(responseJson.owner).to.be.a('string');",
							"});",
							"",
							"pm.test(\"Response time is less than 250ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(250);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "root",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "test",
							"type": "text"
						},
						{
							"key": "description",
							"value": "test",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://0.0.0.0:8000/api/v1/shortener/",
					"protocol": "http",
					"host": [
						"0",
						"0",
						"0",
						"0"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"shortener",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "url-delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"  pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "root",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://0.0.0.0:8000/api/v1/shortener/1/",
					"protocol": "http",
					"host": [
						"0",
						"0",
						"0",
						"0"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"shortener",
						"1",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "url-list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"The response has all properties\", () => {",
							"    //parse the response json and test three properties",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.count).to.be.a('number');",
							"    pm.expect(typeof responseJson.next === \"string\" || responseJson.next === null).to.equal(true);",
							"    pm.expect(typeof responseJson.previous === \"string\" || responseJson.next === null).to.equal(true);",
							"    pm.expect(responseJson.results).to.be.a('array');",
							"    const resultTask = responseJson.results.find(m => m.id === 2);",
							"    pm.expect(resultTask).to.be.an(\"object\", \"Could not find the task\");",
							"    pm.expect(resultTask.id).to.be.a('number');",
							"    pm.expect(resultTask.name).to.be.a('string');",
							"    pm.expect(resultTask.original_url).to.be.a('string');",
							"    pm.expect(resultTask.short_url).to.be.a('string');",
							"    pm.expect(resultTask.owner).to.be.a('string');",
							"});",
							"",
							"pm.test(\"Response time is less than 250ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(250);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "root",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://0.0.0.0:8000/api/v1/shortener/",
					"protocol": "http",
					"host": [
						"0",
						"0",
						"0",
						"0"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"shortener",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "url-edit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"The response has all properties\", () => {",
							"    //parse the response json and test three properties",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.task_status).to.be.a('number');",
							"    pm.expect(responseJson.task_status).to.equal(2);",
							"});",
							"",
							"pm.test(\"Response time is less than 250ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(250);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "root",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://0.0.0.0:8000/api/v1/shortener/1/pause",
					"protocol": "http",
					"host": [
						"0",
						"0",
						"0",
						"0"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"shortener",
						"1",
						"pause"
					]
				}
			},
			"response": []
		},
		{
			"name": "profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"  pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Status code name has string\", () => {",
							"    const responseText = pm.response.text();",
							"    pm.expect(responseText).to.equal(\"Task already has paused\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "root",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://0.0.0.0:8000/api/v1/shortener/1/pause",
					"protocol": "http",
					"host": [
						"0",
						"0",
						"0",
						"0"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"shortener",
						"1",
						"pause"
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"The response has all properties\", () => {",
							"    //parse the response json and test three properties",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.key).to.be.a('string');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "root",
							"type": "text"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://0.0.0.0:8000/api/v1/rest-auth/login/",
					"protocol": "http",
					"host": [
						"0",
						"0",
						"0",
						"0"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"rest-auth",
						"login",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "registration",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"  pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"The response has all properties\", () => {",
							"    //parse the response json and test three properties",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.key).to.be.a('string');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"test1\",\n  \"email\": \"user1@example.com\",\n  \"password1\": \"q2w3e4r5t6y\",\n  \"password2\": \"q2w3e4r5t6y\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://0.0.0.0:8000/api/v1/auth/registration/",
					"protocol": "http",
					"host": [
						"0",
						"0",
						"0",
						"0"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"auth",
						"registration",
						""
					]
				}
			},
			"response": []
		}
	]
}